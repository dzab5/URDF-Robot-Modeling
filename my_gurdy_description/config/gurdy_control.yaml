gurdy:
    # Publish all joint states 
    # -----------------------------------
    joint_states:
        type: joint_state_controller/JointStateController
        publish_rate: 50
    
    # Position Controllers 
    # Name the controller the exact same joint name, proceeded by "_position_controller"
    # ---------------------------------------
    head_upperlegM1_joint_position_controller:
        # Type: is JointPositionController because we want to control it through the position of the joints.
        type: effort_controllers/JointPositionController
        # The JointName: This is linking the joint to the controller.
        joint: head_upperlegM1_joint
        # Sets the PID values. This is absolutely vital to making the actuators reach the desired position without oscillations or going too slow.
        pid: {p: 3.0, i: 1.0, d: 0.0}
    head_upperlegM2_joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: head_upperlegM2_joint
        pid: {p: 3.0, i: 1.0, d: 0.0}
    head_upperlegM3_joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: head_upperlegM3_joint
        pid: {p: 3.0, i: 1.0, d: 0.0}
    upperlegM1_lowerlegM1_joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: upperlegM1_lowerlegM1_joint
        pid: {p: 3.0, i: 1.0, d: 0.0}
    upperlegM2_lowerlegM2_joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: upperlegM2_lowerlegM2_joint
        pid: {p: 3.0, i: 1.0, d: 0.0}
    upperlegM3_lowerlegM3_joint_position_controller:
        type: effort_controllers/JointPositionController
        joint: upperlegM3_lowerlegM3_joint
        pid: {p: 3.0, i: 1.0, d: 0.0}